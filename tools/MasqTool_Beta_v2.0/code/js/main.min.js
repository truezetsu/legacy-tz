var colorNames = ["Red(T)","Blue(T)","Yellow","Green(T)","Purple","L. Blue","Pink","Brown","Black","White","Orange","Gray"];
var costumeNames = ["Pac00","Pac01","Pac02","Pac03","Pac04","Pac05","Pac06","Pac07","Pac08","Pac09","Pac10","Pac11","Pac12","Pac13","Pac14","Pac15"];

var defaultColors = [[0, 9, 1, 3, 8, 9, 8, 0, 3, 1],//Mario
					[7, 8, 0, 1, 3, 9, 0, 1, 3, 6],  //DK
					[3, 0, 1, 9, 2, 8, 3, 0, 1, 8], //Link
					[10, 1, 0, 4, 3, 7, 9, 5, 2, 11],  //Samus
					[5, 1, 0, 9, 3, 8, 9, 1, 10, 6], //ZSS
					[3, 0, 1, 2, 6, 5, 8, 9, 4, 10], //Yoshi			
					[6, 2, 1, 0, 3, 9, 8, 1, 3, 0], //Kirby
					[7, 8, 0, 3, 1, 9, 9, 0, 3, 1], //Fox
					[2, 0, 3, 1, 4, 7, 1, 0, 3, 2], //Pikachu
					[3, 10, 0, 1, 11, 4, 3, 0, 1, 9], //Luigi
					[5, 8, 0, 3, 1, 6, 4, 1, 0, 3], //Captain Falcon	
					[0, 9, 2, 3, 1, 8, 4, 1, 0, 3], //Ness
					[3, 8, 0, 1, 9, 7, 9, 0, 3, 1], //Bowser
					[6, 10, 0, 1, 3, 9, 9, 0, 3, 1], //Peach
					[4, 0, 1, 6, 3, 8, 6, 0, 3, 1], //Zelda
					[4, 0, 1, 6, 3, 8, 6, 0, 3, 1], //Sheik
					[4, 0, 1, 8, 3, 9, 9, 0, 3, 1], //IceClimbers
					[1, 0, 3, 8, 9, 4, 9, 0, 3, 1], //Marth
					[8, 0, 2, 1, 3, 5, 11, 0, 1, 3], //GameWatch
					[9, 10, 1, 0, 3, 8, 7, 0, 3, 1], //Falco
					[4, 8, 1, 3, 0, 7, 4, 1, 3, 0, 5, 8, 1, 3, 0], //Ganondorf
					[2, 0, 7, 3, 9, 1, 5, 0, 1, 3, 10, 8, 6, 8], //Wario
					[4, 9, 0, 3, 1, 6, 8, 0, 3, 1], //Metaknight
					[9, 2, 0, 3, 1, 8, 9, 8, 3, 6], //Pit
					[2, 9, 0, 8, 3, 1, 2, 4, 7, 4], //Olimar
					[2, 5, 0, 1, 3, 6, 7, 0, 3, 1], //Lucas
					[0, 2, 6, 4, 3, 1, 10, 1, 0, 3], //DiddyKong
					[0, 11, 1, 3, 8, 5, 0, 9, 1, 3], //Charizard
					[1, 3, 0, 2, 6, 4, 1, 9, 0, 3], //Squirtle	
					[5, 0, 3, 1, 4, 9, 8, 3, 0, 1], //Ivysaur
					[0, 6, 3, 4, 1, 7, 0, 3, 1, 7], //Dedede
					[1, 0, 8, 11, 3, 2, 1, 8, 3, 0], //Lucario	
					[5, 2, 0, 1, 3, 7, 1, 0, 3, 8], //Ike
					[0, 9, 2, 4, 1, 3, 9, 0, 3, 1, 8, 1, 8, 0, 3], //ROB
					[6, 0, 9, 1, 3, 2, 9, 3, 0, 1], //Jigglypuff	
					[3, 0, 1, 4, 7, 8, 1, 3, 0, 4, 8, 1, 0, 3, 8], //Toon Link	
					[5, 0, 8, 3, 1, 9, 8, 0, 3, 1], //Wolf	
					[11, 0, 1, 9, 3, 10, 3, 0, 1, 8], //Snake	
					[1, 0, 4, 3, 8, 2, 9, 5, 3, 0, 1, 0, 3, 1], //Sonic	
					[4, 3, 0, 1, 8, 4, 2, 0, 3, 1], //Mewtwo	
					[4, 3, 0, 1, 2, 8, 1, 0, 3, 2], //Roy						
];

var defaultCostumes = [[0, 6, 3, 2, 5, 7, 11, 8, 9, 10], //Mario
					[0, 4, 1, 3, 2, 5, 6, 7, 8, 9],      //DK
					[0, 1, 3, 5, 6, 4, 7, 8, 9, 10],     //Link
					[0, 3, 1, 4, 2, 5, 7, 8, 6, 9],      //Samus
					[0, 3, 1, 4, 2, 5, 7, 8, 6, 9],      //ZSS
					[0, 1, 3, 4, 5, 6, 7, 8, 9, 10],     //Yoshi			
					[0, 4, 3, 1, 2, 5, 6, 7, 8, 9],   	//Kirby
					[0, 4, 1, 2, 3, 5, 6, 7, 8, 9],  	//Fox
					[0, 1, 2, 3, 4, 7, 5, 6, 8, 9], 	 //Pikachu
					[0, 5, 1, 3, 4, 6, 7, 8, 9, 10],     //Luigi
					[0, 4, 1, 2, 3, 5, 6, 7, 8, 9],     //Captain Falcon
					[0, 5, 4, 2, 3, 6, 7, 8, 9, 10], 	 //Ness
					[0, 4, 1, 3, 5, 6, 7, 8, 9, 10],  	//Bowser
					[0, 5, 1, 3, 2, 4, 7, 6, 8, 9],	  //Peach
					[0, 1, 3, 5, 2, 4, 6, 7, 8, 9],	  //Zelda
					[0, 1, 3, 5, 2, 4, 6, 7, 8, 9], 	 //Sheik
					[0, 1, 3, 4, 2, 5, 6, 7, 8, 9], 	 //IceClimbers	
					[0, 1, 2, 4, 5, 3, 6, 7, 8, 9], 	 //Marth
					[0, 1, 4, 3, 2, 5, 6, 7, 8, 9],	  //GameWatch	
					[0, 5, 3, 1, 2, 4, 6, 7, 8, 9], 	 //Falco
					[0, 4, 3, 2, 1, 5, 6, 7, 8, 9, 13, 10, 14, 15, 11], //Ganondorf
					[6, 7, 10, 8, 11, 9, 0, 1, 3, 2, 5, 4, 13, 14], //Wario
					[0, 4, 1, 2, 3, 5, 6, 7, 8, 9], //Metaknight
					[0, 4, 1, 2, 3, 5, 6, 7, 8, 9], //Pit
					[0, 4, 1, 5, 2, 3, 6, 7, 8, 9], //Olimar
					[0, 4, 1, 3, 2, 5, 6, 7, 8, 9], //Lucas
					[0, 5, 4, 6, 2, 3, 7, 8, 9, 10], //DiddyKong
					[0, 1, 3, 2, 4, 5, 6, 7, 8, 9], //Charizard
					[0, 2, 1, 3, 4, 5, 6, 7, 8, 9], //Squirtle
					[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], //Ivysaur
					[0, 6, 2, 5, 3, 4, 7, 8, 9, 10], //Dedede	
					[0, 1, 4, 5, 2, 6, 7, 8, 9, 10], //Lucario	
					[0, 5, 1, 3, 2, 4, 6, 7, 8, 9], //Ike
					[0, 6, 5, 4, 3, 2, 7, 8, 9, 10, 1, 13, 11, 14, 15], //ROB
					[0, 1, 4, 3, 2, 5, 6, 7, 8, 9], //Jigglypuff
					[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 2], //Toon Link		
					[0, 1, 4, 2, 3, 5, 6, 7, 8, 9], //Wolf		
					[0, 1, 3, 4, 2, 5, 6, 7, 8, 9], //Snake
					[0, 1, 4, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15], //Sonic
					[0, 2, 1, 3, 4, 5, 6, 7, 8, 9], //Mewtwo
					[0, 2, 1, 3, 4, 5, 6, 7, 8, 9], //Roy	
];

var characterIDs = [
	"06586150", //Mario
	"065864B8", //DK
	"06586538", //Link
	"06586248", //Samus
	"06586260", //ZSS
	"06586198", //Yoshi
	"06586278", //Kirby
	"065861B0", //Fox
	"06586398", //Pikachu
	"065863F8", //Luigi
	"06586488", //Captain Falcon
	"065862A8", //Ness
	"065864D0", //Bowser
	"065864E8", //Peach
	"06586440", //Zelda
	"06586458", //Sheik
	"06586428", //Iceclimbers
	"065862C0", //Marth
	"065863B0", //Gamewatch
	"065861C8", //Falco
	"065865B0", //Ganondorf
	"06455334", //Wario
	"065862F0", //Metaknight
	"065863C8", //Pit
	"06586308", //Olimar
	"065860D8", //Lucas
	"065864A0", //DiddyKong
	"065863E0", //Charizard
	"06586170", //Squirtle
	"065861F0", //Ivysaur
	"06586320", //Dedede
	"06586218", //Lucario
	"06586338", //Ike
	"06586590", //R.O.B.
	"06586290", //Jigglypuff
	"06586570", //Toon Link
	"06586368", //Wolf
	"06586350", //Snake
	"06586550", //Sonic
	"06586230", //Mewtwo
	"065860F0", //Roy
	"064552E4", //Sopo
];

var fighterNames = [
	"Mario", "Donkey Kong", "Link", "Samus", "Zero Suit Samus", "Yoshi", "Kirby", "Fox", "Pikachu", "Luigi",
	"Captain Falcon", "Ness", "Bowser", "Peach", "Zelda", "Sheik", "Ice Climbers", "Marth", "Game & Watch", "Falco",
	"Ganondorf", "Wario", "Metaknight", "Pit", "Olimar", "Lucas", "Diddy Kong", "Charizard", "Squirtle", "Ivysaur",
	"Dedede", "Lucario", "Ike", "Rob", "Jigglypuff", "Toon Link", "Wolf", "Snake", "Sonic", "Mewtwo",
	"Roy"
];

var hexString = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "0A", "0B", "0C", "0D", "0E", "0F"];
var deployed = false;
	
$(document).ready(function() {
	
	$("#costume-amount-fighter1").change(function () {populatePickers("1");});$("#costume-amount-fighter2").change(function () {populatePickers("2");});
	$("#costume-amount-fighter3").change(function () {populatePickers("3");});$("#costume-amount-fighter4").change(function () {populatePickers("4");});
	$("#costume-amount-fighter5").change(function () {populatePickers("5");});$("#costume-amount-fighter6").change(function () {populatePickers("6");});
	$("#costume-amount-fighter7").change(function () {populatePickers("7");});$("#costume-amount-fighter8").change(function () {populatePickers("8");});
	$("#costume-amount-fighter9").change(function () {populatePickers("9");});$("#costume-amount-fighter10").change(function () {populatePickers("10");});
	$("#costume-amount-fighter11").change(function () {populatePickers("11");});$("#costume-amount-fighter12").change(function () {populatePickers("12");});
	$("#costume-amount-fighter13").change(function () {populatePickers("13");});$("#costume-amount-fighter14").change(function () {populatePickers("14");});
	$("#costume-amount-fighter15").change(function () {populatePickers("15");});
	//$("#costume-amount-fighter16").change(function () {populatePickers("16");}); //No Sheik
	$("#costume-amount-fighter17").change(function () {populatePickers("17");});$("#costume-amount-fighter18").change(function () {populatePickers("18");});
	$("#costume-amount-fighter19").change(function () {populatePickers("19");});$("#costume-amount-fighter20").change(function () {populatePickers("20");});
	$("#costume-amount-fighter21").change(function () {populatePickers("21");});$("#costume-amount-fighter22").change(function () {populatePickers("22");});
	$("#costume-amount-fighter23").change(function () {populatePickers("23");});$("#costume-amount-fighter24").change(function () {populatePickers("24");});
	$("#costume-amount-fighter25").change(function () {populatePickers("25");});$("#costume-amount-fighter26").change(function () {populatePickers("26");});
	$("#costume-amount-fighter27").change(function () {populatePickers("27");});$("#costume-amount-fighter28").change(function () {populatePickers("28");});
	$("#costume-amount-fighter29").change(function () {populatePickers("29");});$("#costume-amount-fighter30").change(function () {populatePickers("30");});
	$("#costume-amount-fighter31").change(function () {populatePickers("31");});$("#costume-amount-fighter32").change(function () {populatePickers("32");});
	$("#costume-amount-fighter33").change(function () {populatePickers("33");});$("#costume-amount-fighter34").change(function () {populatePickers("34");});
	$("#costume-amount-fighter35").change(function () {populatePickers("35");});$("#costume-amount-fighter36").change(function () {populatePickers("36");});
	$("#costume-amount-fighter37").change(function () {populatePickers("37");});$("#costume-amount-fighter38").change(function () {populatePickers("38");});
	$("#costume-amount-fighter39").change(function () {populatePickers("39");});$("#costume-amount-fighter40").change(function () {populatePickers("40");});
	$("#costume-amount-fighter41").change(function () {populatePickers("41");});

	$("#generate_codes").click(function(e) {
		e.preventDefault();
		sanityChecker();
		
  		var demcodes = "";
		demcodes+=generateMasqCode();
		demcodes+=generateColorEngineCode();
		demcodes+=generateTripleTeamEngineCode();

		$("#demCodes").html(demcodes);
		if($('#demCodes:hidden')) $("#demCodes").slideToggle("fast");
	});
	
	populatePickers("1");populatePickers("2");populatePickers("3");populatePickers("4");populatePickers("5");
	populatePickers("6");populatePickers("7");populatePickers("8");populatePickers("9");populatePickers("10");
	populatePickers("11");populatePickers("12");populatePickers("13");populatePickers("14");populatePickers("15");
	populatePickers("16");populatePickers("17");populatePickers("18");populatePickers("19");populatePickers("20");
	populatePickers("21");populatePickers("22");populatePickers("23");populatePickers("24");populatePickers("25");
	populatePickers("26");populatePickers("27");populatePickers("28");populatePickers("29");populatePickers("30");
	populatePickers("31");populatePickers("32");populatePickers("33");populatePickers("34");populatePickers("35");
	populatePickers("36");populatePickers("37");populatePickers("38");populatePickers("39");populatePickers("40");
	populatePickers("41");
	
	//Creates the costume data entries. Called on creation and change.
	function populatePickers(fighter){
		fighterStr = "-fighter"+fighter;
		fighter = parseInt(fighter);
		var numCostumes = $("#costume-amount"+fighterStr).val()
		var htmlCode="<br /><br />";

		//Text atop entries
		htmlCode+="<span style=\"font-size: .92em;\">";
		
		for(c=1; c<=numCostumes; c++){
			if(c<10){
				htmlCode+="Costume " + c.toString() + " &nbsp&nbsp&nbsp&nbsp ";
			}else{
				htmlCode+="Costume " + c.toString() + " &nbsp ";
			}
			if(c == 6 || c == 11){ htmlCode+=" &nbsp "};
			
		}
		htmlCode+="</span><br />";
		
		// Color Entries
		for(c=0; c<numCostumes; c++){
			htmlCode+="<select style='width:76px' name='"+c.toString()+"' class='color-picker"+fighterStr+"'>";
			for(color=0; color<12; color++){
				htmlCode+="<option value='"+(color)+"'";
				if(color == defaultColors[fighter-1][c]){
					htmlCode+=" selected";
				}
				htmlCode+=">"+colorNames[color]+"</option>";
			}
			htmlCode+="</select>";
			if(c == 6-1 || c == 11-1){ htmlCode+=" &nbsp "};
		}
		htmlCode+="<br />";
		
		//Costume IDs
		for(c=0; c<numCostumes; c++){
			htmlCode+="<select style='width:76px' name='"+c.toString()+"' class='costume-picker"+fighterStr+"'>";
			for(pac=0; pac<16; pac++){
				if (pac != 12){		
					htmlCode+="<option value='"+(pac)+"'";
					if(pac == defaultCostumes[fighter-1][c]){
						htmlCode+=" selected";
					}
					htmlCode+=">"+costumeNames[pac]+"</option>";				
				};	
			}
			htmlCode+="</select>";
			if(c == 6-1 || c == 11-1){ htmlCode+=" &nbsp "};
		}	
		$("#charPicker"+fighterStr).html(htmlCode);
	}
	
	
	// Check user inputs to see if they're reasonable
	function sanityChecker(){
		deployed = !deployed;
		if(!deployed){ return }
		
		var warn = false;
		var warning = "";
		
		for(a=1; a <= $(defaultCostumes).length; a++){ 
			if (a == 16) { continue; } //Sheik uses Zelda
			
			var team2 = false;
			var team3 = false;
			var numCostumes = ($("#costume-amount-fighter"+a+"").val());
			var pacsUsed = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
			var dataEnd = Math.min(numCostumes, 6);
			var hasRed = 0;
			var hasGreen = 0;
			var hasBlue = 0;
			var name = fighterNames[a-1];
			
			if ($("#team-fighter" + a).is(":checked")){ team2 = true;}
			if ($("#tripleteam-fighter" + a).is(":checked")){ team3 = true;}
			
			// Team flag check
			if(team3 && !team2){
				warn = true;
				warning += "Warning: " + name + "; Third team set activated, but not the second team set.\n";
			}

			//.Pac checker
			for(c=0; c < numCostumes; c++){
				index = parseInt($(".costume-picker-fighter"+a+"[name='"+c+"']").val());
				pacsUsed[index]++;
			}
			for(i=0;i<16;i++){
				if(pacsUsed[i] > 1){
					warn = true;
					warning += "Warning: " + name + "; Same .pac file used for multiple slots.\n";
				}	
			}
			
			//Has First Team Check
			for(c = 0; c< dataEnd; c++){
				index = parseInt($(".color-picker-fighter"+a+"[name='"+c+"']").val());
				if(index == 0){ hasRed++;}
				if(index == 1){ hasBlue++;}
				if(index == 3){ hasGreen++;}
			}
			
			if(hasRed == 0 || hasBlue == 0 || hasGreen == 0){
				warn = true;
				warning += "Warning: " + name + ";  Missing team color in first 6 costumes.\n";
			}
			if(hasRed > 1 || hasBlue > 1 || hasGreen > 1){
				warn = true;
				warning += "Warning: " + name + "; More than one team color in first 6 costumes.\n";
			}	
			
			//Has Second Team Check
			if(team2){
				hasRed = 0;
				hasGreen = 0;
				hasBlue = 0;
				dataEnd = Math.min(numCostumes, 11);
				
				for(c = 6; c < dataEnd; c++){
					index = parseInt($(".color-picker-fighter"+a+"[name='"+c+"']").val());
					if(index == 0){ hasRed++;}
					if(index == 1){ hasBlue++;}
					if(index == 3){ hasGreen++;}
				}
				
				if(hasRed == 0 || hasBlue == 0 || hasGreen == 0){
					warn = true;
					warning += "Warning: " + name + ";  No team set for 2nd team.\n";
				}
				if(hasRed > 1 || hasBlue > 1 || hasGreen > 1){
					warn = true;
					warning += "Warning: " + name + "; More than one team color for second team.\n";
				}	
			}
			
			//Has Third Team Check
			if(team3){
				hasRed = 0;
				hasGreen = 0;
				hasBlue = 0;
				dataEnd = Math.min(numCostumes, 15);
				
				for(c = 11; c < dataEnd; c++){
					index = parseInt($(".color-picker-fighter"+a+"[name='"+c+"']").val());
					if(index == 0){ hasRed++;}
					if(index == 1){ hasBlue++;}
					if(index == 3){ hasGreen++;}
				}
				
				if(hasRed == 0 || hasBlue == 0 || hasGreen == 0){
					warn = true;
					warning += "Warning: " + name + ";  No team set for 3rd team.\n";
				}
				if(hasRed > 1 || hasBlue > 1 || hasGreen > 1){
					warn = true;
					warning += "Warning: " + name + "; More than one team color for third team.\n";
				}	
			}
		}//end Fighter Loop
		if(warn){
			alert(warning);
		}
		
		return
	}
	
	//Generate Masquerade (Part2) Code
	function generateMasqCode(){	
		var numCostumes = 0;
		var codes = "<br/>[Custom TE] Masquerade Costumes (2/2) [ds22, denz, Yohan1044]";
		var index = 0;
		var costumeCount = $(defaultCostumes).length;
		for(a=1;a<=costumeCount+1;a++){
			var ID = characterIDs[a-1];
			var IDnum = "0";
			var b = a;
			
			if(a == 16) {b = 15;} //Sheik uses Zelda
			if(a == 42) {b = 17; } //Sopo uses Ice
			
			numCostumes = ($("#costume-amount-fighter"+b+"").val());
			
			if(numCostumes == "4") {IDnum = " 00000010";}
			if(numCostumes == "5") {IDnum = " 00000010";}
			if(numCostumes == "6") {IDnum = " 00000010";}
			if(numCostumes == "7") {IDnum = " 00000010";}
			if(numCostumes == "8") {IDnum = " 00000018";}
			if(numCostumes == "9") {IDnum = " 00000018";}			
			if(numCostumes == "10") {IDnum = " 00000018";}
			if(numCostumes == "11") {IDnum = " 00000018";}
			if(numCostumes == "12") {IDnum = " 00000020";}
			if(numCostumes == "13") {IDnum = " 00000020";}
			if(numCostumes == "14") {IDnum = " 00000020";}
			if(numCostumes == "15") {IDnum = " 00000020";}

			codes += "<br />* "+ ID + IDnum +"";	
			for(c=0;c<numCostumes;c++){
				if(c%4 == 0){
					codes += "<br />* ";
				}else{
					if(c%2==0){
						codes += " ";
					}
				}
				index = parseInt($(".color-picker-fighter"+b+"[name='"+c+"']").val());
				codes += hexString[index];
				index = parseInt($(".costume-picker-fighter"+b+"[name='"+c+"']").val());
				codes += hexString[index];				
			}
			if(numCostumes%4 == 0){
				codes += "<br />* 0C000000 00000000";
			}
			if(numCostumes%4 == 1){
				codes += "0C00 00000000";
			}
			if(numCostumes%4 == 2){
				codes += " 0C000000";
			}
			if(numCostumes%4 == 3){
				codes += "0C00";
			}	
		};
		
		//codes += "</br>* 06586110 00000010</br>* 01000001 03020203</br>* 07040905 0C000000</br>* 06586120 00000010</br>* 00000302 01030201</br>* 07040905 0C000000</br>* 06586140 00000010</br>* 02000001 03020103</br>* 07040905 0C000000</br>* 065861E0 00000010</br>* 00000201 01030302</br>* 07040805 09060C00";
		codes += "<br />* E0000000 80008000 </br>";
		return(codes);	
	}
	
	//Generate ColorEngine Code
	function generateColorEngineCode(){	
		
		var codes = "</br><br/>[Custom TE] Alt Color Engine Data [Dantarion, denz, Yohan1044]</br>* 4A000000 90000000</br>* 161C4580 0000003C";	
		for(a=0;a<=47;a++){
			var fighter = 0;
			if(a%8 == 0){
				codes += "<br />* ";
			}else{
				if(a%4==0){
					codes += " ";
				}
			}
			
			num = a + 1;
			if( (num >= 28 && num <= 31) || num == 48 || num == 42 || num == 41){
				codes += "00";
			}else{
				
				fighter = num;
				if(num == 16){fighter = 15;} //Sheik uses Zelda
				if(num > 28){fighter = num-1;} //pokemon trainer
				if(num == 43){fighter = 28;} //pokemon
				if(num == 44){fighter = 29;} //pokemon
				if(num == 45){fighter = 30;} //pokemon
				if(num == 46){ fighter = 41;} //Roy
				if(num == 47){fighter = 40;} // Mewtwo
				
				teamFighter = "team-fighter" + fighter;
				if ($('#' + teamFighter).is(":checked")){
					codes += "06";
				}else{
					codes += "00";
				}
			}				
		}
		
		codes+="<br/>* 00000000 00000600<br/>* 00000000 00000000<br/>";
		return(codes);	
	}
	
	//Generate Triple Team Engine Code
	function generateTripleTeamEngineCode(){	
		var codes = "<br/><br/>[Custom TE] Triple Teams For Assorted Characters (Part1)<br/> [PyotrLuzhin, Yohan1044]";
		var character = "02";
		
		for(i=0;i<2;i++){
			if(i==1){ character = "0C";}
			codes += "</br>* 4A000000 90000000";
		
			if(i==0){
				codes += "</br>* 161B45BC 0000003C";
			}else{
				codes += "</br>* 161B45F8 0000003C";
			}
			
			codes+="</br>* 00000000 00000000</br>* 00000000 00000000</br>* 00000000 ";
			
			if ($("#tripleteam-fighter21").is(":checked")) { //Ganon
				codes += character;
			}else{
				codes += "00";
			}
			
			/*if ($("#tripleteam-fighter22").is(":checked")) { //Wario
				codes += character;
			}else{
				codes += "00";
			}*/
			codes += "00";
			codes += "0000</br>* 00000000 00000000</br>* 0000";
			
			if ($("#tripleteam-fighter34").is(":checked")) { //Rob
				codes += character;
			}else{
				codes += "00";
			}
		
			codes += "00 "
			if ($("#tripleteam-fighter36").is(":checked")) { //Tink
				codes += character;
			}else{
				codes += "00";
			}
			
			codes += "0000";
			
			if ($("#tripleteam-fighter39").is(":checked")) { //Sonic
				codes += character;
			}else{
				codes += "00";
			}
		
			codes += "</br>* 00000000 00000000</br>* 00000000 00000000</br>* 00000000 00000000";
			codes += "</br>* E0000000 80008000";
		}
		
		codes += "</br>* C26998DC 00000006</br>* 80A301B8 541CD97E</br>* 3D80901B 618C45BC</br>* 7CAC28AE 2C050002</br>* 40820010 2C00001F</br>* 40820008 3B800002</br>* 60000000 00000000"
		codes += "</br>* C2699C20 00000007</br>* 80A301B8 541CD97E</br>* 3D80901B 618C45BC</br>* 7CAC28AE 2C050002</br>* 4082001C 2C000020</br>* 40820008 3B800002</br>* 2C00001E 40820008</br>* 3B800001 00000000";
							 
		
		
		// Get correct color indexes.			 
		for(i=0;i<2;i++){
			if(i==0){
				codes += "</br>* 046974F0 41820034</br>* C26974EC 00000029</br>* 7F44D378 3D80901B</br>* 618C45BC 7D8CF8AE</br>* 2C0C0002 40820130</br>* 3D80901B 618C45F8</br>* 7D8CF8AE 60000000";
			}else{
				codes += "</br>* 04684978 41820034</br>* C2684974 0000002A</br>* 881801C4 809801C0</br>* 7FA3EB78 3D80901B</br>* 618C45BC 7D8C18AE</br>* 2C0C0002 40820130</br>* 3D80901B 618C45F8</br>* 7D8C18AE 60000000"; 
			}
		
		
			var charHex = ['14','15','22','24','27']; //Wario does nothing.
			var charNum = [21,22,34,36,39];
			var costumeIndexHex = ['B','C','D','E'];//Starts at 11
			
			for(c = 0; c < 5; c++){
				var red = 'E';
				var blue = 'E';
				var green = 'E';
				
				var numCostumes = ($("#costume-amount-fighter"+charNum[c]+"").val());
				
			
				//Has First Team Check
				for(c2 = 0; c2< numCostumes-11; c2++){ //Starts at 11
					index = parseInt($(".color-picker-fighter"+charNum[c]+"[name='"+(c2+11)+"']").val()); //plus 11
					if(index == 0){ red = costumeIndexHex[c2]; }
					if(index == 1){ blue = costumeIndexHex[c2];}
					if(index == 3){ green = costumeIndexHex[c2];}
				}

				if(i == 0){
					codes +="</br>* 2C1F00" + charHex[c];
				}else{
					codes +="</br>* 2C1D00" + charHex[c];
				}
				codes +=" 40820030</br>* 2C040000 4082000C</br>* 3860000" + red;
				codes +=" 48000020</br>* 2C040001 4082000C</br>* 3860000" + blue;
				codes +=" 48000010</br>* 2C040002 40820008</br>* 3860000" + green;
				codes +=" 60000000";
			}
		
			if(i==0){
				codes += "</br>* 2C190002 00000000";
			}else{
				codes += "</br>* 2C000002 00000000";
			}
		
		}		

		codes+="<br />";
		return(codes);	
	}
	
});